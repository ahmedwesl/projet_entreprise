/**
 * Created by jean.rennes on 18/09/2020.
 */
 ///<reference path="Fragment.ts" /> 

namespace AFC.Application {
    export class Intent extends Bundle {
        public readonly packageContext: Context;
        public readonly cls: Tools.Constructor;
        
        constructor(packageContext: Context, cls: Tools.Constructor) {
            super();
            this.packageContext = packageContext;
            this.cls = cls;
        }
    }
    
    const _context = Symbol(),
        _intent = Symbol(),
        _fragmentManager = Symbol(),
        _layoutInflater = Symbol(),
        _attach = Symbol(),
        _window = Symbol();
    
    export class Context {
        /** @internal */
        protected [_context]: Context;
        
        constructor(base: Context) {
            this[_context] = base;
        }

        public startActivity(intent: Intent): void {
            let activity = new intent.cls();
            if (activity instanceof Activity) {
                activity[_attach](intent);
            }
        }
        
        public getBaseContext<T extends Context = Context>(): T {
            return <T>this[_context];
        }
    }

    export class Activity extends Context {
        /** @internal */
        private [_intent]: Intent;
        /** @internal */
        private [_fragmentManager]: FragmentManager;
        /** @internal */
        private [_layoutInflater]: Inflater;
        /** @internal */
        private [_window]: Controls.Window;
        
        protected _onCreate(icicle: Bundle): void {

        }

        protected _onStart(): void {

        }
        
        protected _onStop(): void {

        }
        
        protected _onDestroy(): void {

        }
        
        public getWindow(): Controls.Window {
            return this[_window];
        }
        
        public getIntent(): Intent {
            return this[_intent];
        }
        
        public setContentView(view: gui.IView): void {
            this[_window].setContentView(view);
            gui.onRestoreViewState(this, this[_window].getElement(), this.getSupportFragmentManager());
        }
        
        public getSupportFragmentManager(): FragmentManager {
            return this[_fragmentManager] || (this[_fragmentManager] = new FragmentManager(this, {onGetLayoutInflater: ()=> this.getLayoutInflater()}));
        }
        
        public getLayoutInflater(): ILayoutInflater {
            return this[_layoutInflater] || (this[_layoutInflater] = new Inflater());
        }
        
        /** @internal */
        public [_attach](intent: Intent, icicle?: Bundle): void {
            this[_intent] = intent;
            this[_context] = intent.packageContext;
            this[_window] = new Controls.Window(this);
            this._onCreate(icicle);
            this._onStart();
        }
        
        public finish(): void {
            if (this[_intent]) {
                this._onStop();
                this._onDestroy();
                this[_window].destroy();
                delete this[_window];
                delete this[_context];
                delete this[_intent];
            }
        }
    }
}