/*---------------------------------------------------------------------*/
/*---------------------------------------------------------------------*/

namespace AFC.Controls {
    const _timeout = Symbol(),
        _resizeThreshold = 500;
    
    function _getValues(container: Window): { top: number, left: number, width: number, height: number } {
        let parent = container?.getElement();
        /*
                    if (view.left !== void 0 && view.width !== void 0) {
                        width = view.left + view.width;
                        if (parent.clientWidth > width)
                            left = (parent.clientWidth - width) >> 1;
                    }
                    if (view.top !== void 0 && view.height !== void 0) {
                        height = view.top + view.height;
                        if (parent.clientHeight > height)
                            top = (parent.clientHeight - height) >> 1;
                    }
                    */
        return parent ?
            { left: parent.offsetLeft, top: parent.offsetTop, width: parent.offsetWidth, height: parent.offsetHeight } :
            { left: 0, top: 0, width: window.innerWidth, height: window.innerHeight };
    }
    
    export class Window {
        /** @internal */
        private [_timeout]: number;
        
        private _context: Application.Context;
        private _container: Window;
        private _element: gui.AfcGuiRoot;
        private _handler: (e: UIEvent)=> void;
        
        constructor(context: Application.Context) {
            this._context = context;
            this[_timeout] = null;
        }
        
        public getContainer(): Window {
            return this._container;
        }
        
        public setContainer(container: Window) {
            this._container = container;
        }
        
        public setContentView(view: gui.IView) {
            this.getElement().init(_getValues(this._container)).appendChild(view);
        }
        
        public getElement(): gui.AfcGuiRoot {
            let element = this._element;
            
            if (!element) {
                let parent = this._container ? this._container.getElement() : document.body;
                parent.appendChild(this._element = element = <gui.AfcGuiRoot>document.createElement('afc-gui-root'));
                window.addEventListener('resize', this._handler = ()=> {
                    let timeout = this[_timeout];
                    (timeout !== null) && clearInterval(timeout);
                    this[_timeout] = setTimeout(() => element.resize(_getValues(this._container)), _resizeThreshold);
                });
            }
            return element;
        }
        
        public destroy(): void {
            if (this._element) {
                window.removeEventListener('resize', this._handler);
                delete this._handler;
                this._element.parentNode.removeChild(this._element);
                delete this._element;
            }
        }
    }
}