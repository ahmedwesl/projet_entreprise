/**
 * Created by jean.rennes on 20/07/2017.
 */
///<reference path="../../models/dashboards/Dashboard.ts" />
///<reference path="../../views/controls/Image.ts" />
///<reference path="../../helpers/AdapterBase.ts" />

namespace AFC.Dashboards {
    interface IImageModel extends IViewModel {
        getImage(width: number, height: number): Promise<string|void>;
    }
        
    export class ImageAdapter<T extends IImageModel = IImageModel, C extends Controls.Image = Controls.Image> extends AFC.Tools.AdapterBase<T> {
        public readonly control: C;
        public static readonly header: string = 'data:image/png;base64,';

        constructor(image: C) {
            super();
            this.control = image;
        }

        protected _onImageReady(data: string|void):void {
            this.control.loadingEnd();
            this.control.setUrl(data&&`${ImageAdapter.header}${data}`);
        }

        protected _update(model: T):void {
            if (!this.control.isLoading()) {
                this.control.setUrl();
                this.control.loadingStart();
            }
            model.getImage(this.control.width, this.control.height).then(data => this._onImageReady(data));
        }
        
        public unbind(): void {
            if (!this.control.isLoading()) {
                this.control.setUrl();
                this.control.loadingStart();
            }
            super.unbind();
        }
    }
};